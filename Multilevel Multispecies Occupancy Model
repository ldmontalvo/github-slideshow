model {
  
## PRIOR
  
# We estimate intercept for detection for every species
for (k in 1:nspec){
  alpha0[k] ~ dnorm(mu.alpha0, tau.alpha0)
  alpha.dat[k] ~ dnorm(mu.alpha.dat, tau.alpha.dat)
  alpha.time[k] ~ dnorm(mu.alpha.time, tau.alpha.time)
  alpha.veg[k] ~ dnorm(mu.alpha.veg, tau.alpha.veg)
  beta0[k] ~ dnorm(mu.beta0, tau.beta0) # mean intercept for species
  beta.veg[k] ~ dnorm(mu.beta.veg, tau.beta.veg) #beta for veg1 doesn't have random effect
}


# Random effects for PLANDT and ED
for (k in 1:nspec){
  for (g in 1:nland){
    beta1[g,k] ~ dnorm(mu.for[g,k], tau.for)
    mu.for[g,k] <- beta0.fored[g,k] + beta.for[k]*PLANDT[g] + beta.ed[k]*EDGE[g]
    beta0.fored[g,k] ~ dnorm(0, tau0.for)
  }
    beta.for[k] ~ dnorm(0, tau.for)
    beta.ed[k] ~ dnorm(0, tau.for)
}


## HYPERPRIORS

# alpha for detectability

mu.alpha0 ~ dnorm(0, 0.6) #intercept for psi
tau.alpha0 <- pow(sd.alpha0, -2) 
sd.alpha0 ~ dunif(0, 10)

mu.alpha.dat ~ dnorm(0, 0.6)
tau.alpha.dat <- pow(sd.alpha.dat, -2) 
sd.alpha.dat ~ dunif(0, 10)

mu.alpha.time ~ dnorm(0, 0.6)
tau.alpha.time <- pow(sd.alpha.time, -2) 
sd.alpha.time ~ dunif(0, 10)

mu.alpha.veg ~ dnorm(0, 0.6)
tau.alpha.veg <- pow(sd.alpha.veg, -2) 
sd.alpha.veg ~ dunif(0, 10)


# betas for occupancy

mu.beta0 ~ dnorm(0, 0.6)
tau.beta0 <- pow(sd.beta0, -2)
sd.beta0 ~ dunif(0, 10)


tau.for <-  pow(sd.tau.for, -2)
sd.tau.for ~ dunif(0, 10)

tau0.for <-  pow(sd.tau0.for, -2)
sd.tau0.for ~ dunif(0, 10)

tau.beta.for <-  pow(sd.tau.beta.for, -2)
sd.tau.beta.for ~ dunif(0, 10)


tau.ed <-  pow(sd.tau.ed, -2)
sd.tau.ed ~ dunif(0, 10)

tau0.ed <-  pow(sd.tau0.ed, -2)
sd.tau0.ed ~ dunif(0, 10)

tau.beta.ed <-  pow(sd.tau.beta.ed, -2)
sd.tau.beta.ed ~ dunif(0, 10)


mu.beta.veg ~ dnorm(0, 0.6)
tau.beta.veg <- pow(sd.beta.veg, -2)
sd.beta.veg ~ dunif(0, 10)


### The Likelihood:  

# Logistic model for occupancy (process model)
  
for(k in 1:nspec){
  for (i in 1:nsite){
    z[i,k] ~ dbern(psi[i,k]) # True presence/absence
    logit(psi[i,k]) <- beta0[k] + beta1[g[i],k] + beta.veg[k]*veg1[i]
  }#i
}#k
  
# Observation model for detection/nondetection data
  
for(k in 1:nspec){
  for (i in 1:nsite){
    for (j in 1:nrep){
      y[i,j,k] ~ dbern(mu.p[i,j,k]) # Observed detection/nondetection 
      mu.p[i,j,k] <- p[i,j,k]*z[i,k]
      logit(p[i,j,k]) <- alpha0[k] + alpha.dat[k]*DATE[i,j] +
                                     alpha.time[k]*TIME[i,j] +
                                     alpha.veg[k]*veg1[i]

# Create simulated dataset to calculate the bayesian p-value
      ynew[i,j,k] ~ dbern(mu.p[i,j,k])

# Pearson residuals
     d[i,j,k] <- (y[i,j,k] - mu.p[i,j,k])/sqrt((mu.p[i,j,k]+0.001)*(1-mu.p[i,j,k]+0.001))
      d2[i,j,k] <- pow(d[i,j,k],2)
      dnew[i,j,k] <- (ynew[i,j,k] - mu.p[i,j,k])/sqrt((mu.p[i,j,k]+0.001)*(1-mu.p[i,j,k]+0.001))
      dnew2[i,j,k] <- pow(dnew[i,j,k],2)
    }#j
  }#i
}#k

# Calculate the discrepancy measure
p.fit <- sum(d2[,,])
p.fit.new <- sum(dnew2[,,])

# Derived parameters:

# This matrix will be the richness estimated from the model

for (i in 1:nsite){
  richness[i] <- sum(z[i,]) #species richness at each site i
}#i


}
